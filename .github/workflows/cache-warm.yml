name: Cache Optimization

on:
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'

jobs:
  warm-cache:
    name: Warm Build Cache
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python with cache
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'

    - name: Install and cache dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-mock black isort flake8 bandit safety

    - name: Cache test results
      uses: actions/cache@v3
      with:
        path: |
          .pytest_cache
          .coverage
        key: test-cache-${{ runner.os }}-${{ hashFiles('tests/**/*.py', 'src/**/*.py') }}

    - name: Pre-warm Docker buildx cache
      uses: docker/setup-buildx-action@v3

    - name: Build Docker layers for cache
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64

    - name: Cache status
      run: |
        echo "ðŸ”¥ Cache warming completed successfully!"
        echo "ðŸ“Š Cache benefits:"
        echo "- Python dependencies cached"
        echo "- Docker build layers cached"
        echo "- Test artifacts cached"
        echo ""
        echo "âš¡ Expected speedup: 30-50% faster builds"