name: Build Database Images

on:
  push:
    branches: [ main ]
    paths:
      - 'docker/redis/**'
      - 'docker/postgres/**'
      - '.github/workflows/database-images.yml'
  workflow_dispatch:

env:
  REGISTRY: registry.jclee.me
  
jobs:
  build-redis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push Redis image
        uses: docker/build-push-action@v5
        with:
          context: ./docker/redis
          file: ./docker/redis/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/blacklist-redis:latest
          labels: |
            com.centurylinklabs.watchtower.enable=true
            org.opencontainers.image.revision=${{ github.sha }}

  build-postgres:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push PostgreSQL image
        uses: docker/build-push-action@v5
        with:
          context: ./docker/postgresql
          file: ./docker/postgresql/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/blacklist-postgres:latest
          labels: |
            com.centurylinklabs.watchtower.enable=true
            org.opencontainers.image.revision=${{ github.sha }}

  restart-containers:
    needs: [build-redis, build-postgres]
    runs-on: self-hosted
    if: success()
    steps:
      - name: Pull new images
        run: |
          docker pull ${{ env.REGISTRY }}/blacklist-redis:latest
          docker pull ${{ env.REGISTRY }}/blacklist-postgres:latest
      
      - name: Restart containers with new images
        run: |
          # Stop existing containers
          docker stop blacklist-redis blacklist-postgres || true
          docker rm blacklist-redis blacklist-postgres || true
          
          # Start Redis with Watchtower label
          docker run -d \
            --name blacklist-redis \
            --label com.centurylinklabs.watchtower.enable=true \
            -p 6380:6379 \
            -v redis-data:/data \
            --restart unless-stopped \
            ${{ env.REGISTRY }}/blacklist-redis:latest
          
          # Start PostgreSQL with Watchtower label  
          docker run -d \
            --name blacklist-postgres \
            --label com.centurylinklabs.watchtower.enable=true \
            -p 5433:5432 \
            -v postgres-data:/var/lib/postgresql/data \
            -e POSTGRES_PASSWORD=postgres \
            -e POSTGRES_DB=blacklist \
            --restart unless-stopped \
            ${{ env.REGISTRY }}/blacklist-postgres:latest
          
          # Verify containers are running
          docker ps | grep blacklist-redis
          docker ps | grep blacklist-postgres