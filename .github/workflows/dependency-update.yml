name: Dependency Update

on:
  schedule:
    - cron: '0 2 * * 1'  # Every Monday at 2 AM UTC
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  check-dependencies:
    runs-on: ubuntu-latest
    outputs:
      updates_available: ${{ steps.check.outputs.updates }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install pip-tools
        run: |
          pip install --upgrade pip pip-tools

      - name: Check for dependency updates
        id: check
        run: |
          # Check if updates are available
          pip-compile --upgrade --dry-run requirements.in > update_check.txt 2>&1 || true
          
          if grep -q "Updated" update_check.txt; then
            echo "updates=true" >> $GITHUB_OUTPUT
            echo "✅ Dependency updates available"
          else
            echo "updates=false" >> $GITHUB_OUTPUT
            echo "✅ All dependencies are up to date"
          fi
          
          cat update_check.txt

      - name: Upload check results
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check
          path: update_check.txt

  update-dependencies:
    runs-on: ubuntu-latest
    needs: check-dependencies
    if: needs.check-dependencies.outputs.updates_available == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip pip-tools safety

      - name: Update requirements
        run: |
          pip-compile --upgrade requirements.in
          pip-compile --upgrade requirements-dev.in

      - name: Install updated dependencies
        run: |
          pip install -r requirements.txt

      - name: Run security check
        run: |
          safety check --json --output safety-report.json || true
          safety check

      - name: Run quick tests
        run: |
          pip install pytest
          pytest tests/ -x -q --tb=short -m "not slow"
        env:
          FORCE_DISABLE_COLLECTION: true
          COLLECTION_ENABLED: false

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: '🔄 Automated Dependency Update'
          body: |
            ## Automated Dependency Update
            
            This PR contains automated dependency updates generated by the dependency-update workflow.
            
            ### Changes
            - Updated Python dependencies to latest compatible versions
            - Security vulnerabilities checked with Safety
            - Basic tests passed
            
            ### Validation
            - ✅ Security scan completed
            - ✅ Quick tests passed
            - ⚠️ Full test suite will run on PR creation
            
            ### Notes
            Please review the changes and ensure all tests pass before merging.
            
            ---
            🤖 *This PR was created automatically by GitHub Actions*
          branch: automated/dependency-update
          delete-branch: true

  security-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install safety bandit

      - name: Run security audit
        run: |
          echo "## Security Audit Report" >> security-report.md
          echo "" >> security-report.md
          echo "### Safety Check (Dependency Vulnerabilities)" >> security-report.md
          echo "\`\`\`" >> security-report.md
          safety check >> security-report.md 2>&1 || echo "Vulnerabilities found" >> security-report.md
          echo "\`\`\`" >> security-report.md
          echo "" >> security-report.md
          echo "### Bandit Check (Code Security)" >> security-report.md
          echo "\`\`\`" >> security-report.md
          bandit -r src/ -f txt >> security-report.md 2>&1 || echo "Security issues found" >> security-report.md
          echo "\`\`\`" >> security-report.md

      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-report
          path: security-report.md

      - name: Comment on latest commit
        if: github.event_name == 'workflow_dispatch'
        uses: peter-evans/commit-comment@v3
        with:
          body-path: security-report.md