name: Deploy to Staging

on:
  push:
    branches: [ develop ]
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker image tag to deploy'
        required: false
        default: 'latest'

env:
  REGISTRY: registry.jclee.me
  IMAGE_NAME: blacklist
  ENVIRONMENT: staging

jobs:
  deploy:
    runs-on: self-hosted
    environment: staging
    steps:
      - uses: actions/checkout@v3
      
      - name: Create Docker config
        run: |
          mkdir -p ~/.docker
          echo '${{ secrets.DOCKER_AUTH_CONFIG }}' > ~/.docker/config.json
      
      - name: Deploy to Staging
        run: |
          # Set image tag
          IMAGE_TAG="${{ github.event.inputs.image_tag || github.sha }}"
          
          # Update kustomization
          cd k8s/overlays/staging
          kustomize edit set image blacklist=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG}
          
          # Create namespace if not exists
          kubectl create namespace blacklist-staging --dry-run=client -o yaml | kubectl apply -f -
          
          # Apply manifests
          kustomize build . | kubectl apply -f -
          
          # Wait for rollout
          kubectl rollout status deployment/staging-blacklist -n blacklist-staging --timeout=5m
      
      - name: Run smoke tests
        run: |
          # Wait for service to be ready
          sleep 30
          
          # Health check
          kubectl run smoke-test --rm -i --restart=Never \
            --image=curlimages/curl:latest -n blacklist-staging -- \
            curl -f http://staging-blacklist:8541/health
          
          # API test
          kubectl run api-test --rm -i --restart=Never \
            --image=curlimages/curl:latest -n blacklist-staging -- \
            curl -f http://staging-blacklist:8541/api/stats
      
      - name: Deployment info
        run: |
          echo "Staging deployment completed!"
          echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG}"
          kubectl get pods -n blacklist-staging
          kubectl get svc -n blacklist-staging