name: Watchtower Auto-Deploy Pipeline
on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: registry.jclee.me
  IMAGE_NAME: jclee94/blacklist

jobs:
  build-and-push:
    runs-on: self-hosted
    permissions:
      contents: write
      packages: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          config-inline: |
            [registry."registry.jclee.me"]
              http = true
              insecure = true
      
      - name: Log in to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_PASS }}
      
      - name: Generate version and tags
        id: meta
        run: |
          # Generate version info
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "date=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
          
          # Auto-increment version
          if [ -f VERSION ]; then
            CURRENT_VERSION=$(cat VERSION)
          else
            CURRENT_VERSION="1.0.0"
          fi
          
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          PATCH=$((PATCH + 1))
          
          if [ $PATCH -ge 100 ]; then
            PATCH=0
            MINOR=$((MINOR + 1))
          fi
          
          if [ $MINOR -ge 100 ]; then
            MINOR=0
            MAJOR=$((MAJOR + 1))
          fi
          
          NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
          echo "$NEW_VERSION" > VERSION
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          
          echo "üîÑ Version: $CURRENT_VERSION ‚Üí $NEW_VERSION"
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./deployment/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}
            BUILD_DATE=${{ steps.meta.outputs.date }}
            VCS_REF=${{ steps.meta.outputs.sha_short }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Commit version update
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          git add VERSION
          
          if ! git diff --staged --quiet; then
            git commit -m "chore: bump version to ${{ steps.meta.outputs.version }} [skip ci]"
            git push origin main
          fi
      
      - name: Trigger Watchtower update
        run: |
          echo "üöÄ Deployment Summary"
          echo "===================="
          echo "üì¶ Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          echo "üè∑Ô∏è  Version: ${{ steps.meta.outputs.version }}"
          echo "üîÑ SHA: ${{ steps.meta.outputs.sha_short }}"
          echo ""
          echo "‚è∞ Watchtower will automatically detect and deploy this update within 2-5 minutes"
          echo ""
          echo "üìç Deployment targets with Watchtower:"
          echo "  ‚Ä¢ Synology NAS (192.168.50.215)"
          echo "  ‚Ä¢ Production servers with Watchtower enabled"
          echo ""
          echo "‚úÖ No manual intervention required - Watchtower handles everything!"