name: Fast CI Pipeline

on:
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: "3.11"

jobs:
  quick-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies (quick)
        run: |
          pip install --upgrade pip
          pip install flake8 black isort bandit

      - name: Quick lint check
        run: |
          # Critical error checking only
          flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
          
      - name: Format check
        run: |
          black --check --diff src/ tests/
          isort --check-only --diff src/ tests/

      - name: Security scan (quick)
        run: |
          bandit -r src/ -ll -q

  test-unit:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: quick-check
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-xdist

      - name: Run unit tests only
        run: |
          pytest -v -n auto -m "unit" --tb=short
        env:
          FORCE_DISABLE_COLLECTION: true
          COLLECTION_ENABLED: false

  docker-build-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: quick-check
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (test only)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          tags: test-image:latest

      - name: Test Docker image
        run: |
          docker run --rm -d --name test-container \
            -e FORCE_DISABLE_COLLECTION=true \
            -e COLLECTION_ENABLED=false \
            -p 8080:2541 test-image:latest
          
          # Wait for container to start
          sleep 10
          
          # Health check
          curl -f http://localhost:8080/health || exit 1
          
          # Cleanup
          docker stop test-container

  summary:
    runs-on: ubuntu-latest
    needs: [quick-check, test-unit, docker-build-test]
    if: always()
    steps:
      - name: PR Summary
        run: |
          echo "## Fast CI Pipeline Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Quick Check**: ${{ needs.quick-check.result }}" >> $GITHUB_STEP_SUMMARY
          echo "🧪 **Unit Tests**: ${{ needs.test-unit.result }}" >> $GITHUB_STEP_SUMMARY
          echo "🐳 **Docker Build**: ${{ needs.docker-build-test.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "⚡ **Total Time**: ~10-15 minutes (optimized for PR feedback)" >> $GITHUB_STEP_SUMMARY