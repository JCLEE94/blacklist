name: Auto Deploy to Registry

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: registry.jclee.me
  IMAGE_NAME: blacklist
  DOCKER_BUILDKIT: 1

jobs:
  build-and-deploy:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to Container Registry
      run: |
        echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login ${{ env.REGISTRY }} -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin

    - name: Build Docker image
      run: |
        docker buildx build \
          --platform linux/amd64 \
          --cache-from type=local,src=/tmp/.buildx-cache \
          --cache-to type=local,dest=/tmp/.buildx-cache-new,mode=max \
          -f docker/Dockerfile \
          -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
          -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
          --load \
          .

    - name: Push to registry
      run: |
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache || true

    - name: Test image health
      run: |
        docker run --rm --name test-container -d -p 8080:2542 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        sleep 30
        curl -f http://localhost:8080/health || exit 1
        docker stop test-container || true

    - name: Cleanup old images
      run: |
        docker image prune -f
        docker images | grep ${{ env.IMAGE_NAME }} | grep -v latest | head -n -3 | awk '{print $3}' | xargs -r docker rmi || true

    - name: Logout from registry
      if: always()
      run: docker logout ${{ env.REGISTRY }}

    - name: Docker Compose Deployment Notification
      run: |
        echo "🐳 DOCKER COMPOSE 기반 배포 완료"
        echo "✅ Image pushed to registry: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
        echo "🔄 Watchtower 자동 업데이트: 1시간 내 배포"
        echo ""
        echo "📋 즉시 수동 배포:"
        echo "  docker-compose pull && docker-compose up -d"
        echo ""
        echo "📊 서비스 상태 확인:"
        echo "  docker-compose ps"
        echo "  curl http://localhost:32542/health"
        echo ""
        echo "🎯 Compose 기반 완전 전환 완료 - K8s 의존성 제거됨"