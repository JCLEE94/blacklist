name: Main Deploy Pipeline

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '.github/workflows/deploy-pages.yml'
  workflow_dispatch:

env:
  REGISTRY: registry.jclee.me
  IMAGE_NAME: jclee94/blacklist
  HELM_REPO: https://charts.jclee.me

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: admin
          password: bingogo1

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-helm-chart:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.13.0'

      - name: Install helm-cm-push plugin
        run: |
          helm plugin install https://github.com/chartmuseum/helm-push || true

      - name: Update Chart version and push
        run: |
          # Update chart version
          cd chart/blacklist
          # Get current version and increment patch
          CURRENT_VERSION=$(grep '^version:' Chart.yaml | cut -d' ' -f2)
          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
          NEW_PATCH=$((patch + 1))
          NEW_VERSION="${major}.${minor}.${NEW_PATCH}"
          sed -i "s/^version:.*/version: $NEW_VERSION/" Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: \"${{ github.sha }}\"/" Chart.yaml
          
          # Package chart
          cd ..
          helm package blacklist
          
          # Push to ChartMuseum
          helm repo add chartmuseum ${{ env.HELM_REPO }} --username admin --password bingogo1
          helm cm-push blacklist-*.tgz chartmuseum

  trigger-argocd-sync:
    needs: update-helm-chart
    runs-on: ubuntu-latest
    steps:
      - name: Trigger ArgoCD Sync
        run: |
          # ArgoCD sync via API
          ARGOCD_SERVER="argo.jclee.me"
          ARGOCD_TOKEN="${{ secrets.ARGOCD_TOKEN }}"
          
          curl -k -X POST https://${ARGOCD_SERVER}/api/v1/applications/blacklist/sync \
            -H "Authorization: Bearer ${ARGOCD_TOKEN}" \
            -H "Content-Type: application/json" \
            -d '{"revision":"HEAD","prune":false,"dryRun":false}'

  verify-deployment:
    needs: trigger-argocd-sync
    runs-on: ubuntu-latest
    steps:
      - name: Wait for deployment
        run: sleep 30

      - name: Check health
        run: |
          # Check if service is healthy
          MAX_RETRIES=10
          RETRY_COUNT=0
          
          while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
            if curl -f http://blacklist.jclee.me/health; then
              echo "Deployment successful!"
              exit 0
            fi
            
            echo "Waiting for deployment... ($RETRY_COUNT/$MAX_RETRIES)"
            sleep 10
            RETRY_COUNT=$((RETRY_COUNT + 1))
          done
          
          echo "Deployment health check failed"
          exit 1