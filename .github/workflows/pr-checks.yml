name: Pull Request Checks

on:
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort mypy
          
      - name: Run linters
        run: |
          # Python linting
          flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          
          # Code formatting check
          black --check src/
          isort --check-only src/
          
          # Type checking
          mypy src/ --ignore-missing-imports

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-timeout
          
      - name: Run tests
        run: |
          pytest tests/ -v --cov=src --cov-report=term-missing --timeout=300
          
      - name: Check test coverage
        run: |
          coverage report --fail-under=60

  docker-build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: blacklist-pr:${{ github.event.pull_request.number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  integration-test:
    runs-on: ubuntu-latest
    needs: docker-build
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Compose
        run: |
          docker-compose -f docker-compose.yml config
          
      - name: Start services
        run: |
          docker-compose -f docker-compose.yml up -d
          sleep 30  # 서비스 시작 대기
          
      - name: Run integration tests
        run: |
          # API 헬스 체크
          curl -f http://localhost:8541/health
          
          # 주요 엔드포인트 테스트
          curl -f http://localhost:8541/api/blacklist/active
          curl -f http://localhost:8541/api/stats
          
      - name: Check logs
        if: failure()
        run: |
          docker-compose logs
          
      - name: Stop services
        if: always()
        run: |
          docker-compose down -v