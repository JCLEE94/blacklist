apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: blacklist
  namespace: argocd
  annotations:
    argocd-image-updater.argoproj.io/blacklist.ignore-tags: dev-*, test-*
    argocd-image-updater.argoproj.io/blacklist.update-strategy: latest
    argocd-image-updater.argoproj.io/git-branch: main
    argocd-image-updater.argoproj.io/image-list: blacklist=registry.jclee.me/jclee94/blacklist
    argocd-image-updater.argoproj.io/write-back-method: git
    argocd.argoproj.io/sync-wave: "0"
    notifications.argoproj.io/subscribe.on-sync-failed.slack: blacklist-alerts
    notifications.argoproj.io/subscribe.on-sync-succeeded.slack: blacklist-deployments
  labels:
    app: blacklist
    environment: production
spec:
  project: default
  source:
    repoURL: https://github.com/JCLEE94/blacklist.git
    path: charts/blacklist
    targetRevision: main
    helm:
      valueFiles:
        - values.yaml
      values: |
        image:
          repository: registry.jclee.me/blacklist
          tag: f88fd81
          pullPolicy: Always
        
        imagePullSecrets:
          - name: jclee-registry-secret
        
        service:
          type: NodePort
          port: 80
          targetPort: 8541
          nodePort: 32453
        
        ingress:
          enabled: true
          className: nginx
          annotations:
            nginx.ingress.kubernetes.io/rewrite-target: /
            nginx.ingress.kubernetes.io/ssl-redirect: "true"
          hosts:
            - host: blacklist.jclee.me
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - secretName: blacklist-tls
              hosts:
                - blacklist.jclee.me
        
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
        
        autoscaling:
          enabled: true
          minReplicas: 1
          maxReplicas: 1
          targetCPUUtilizationPercentage: 70
        
        env:
          PORT: "8541"
          LOG_LEVEL: info
          NODE_ENV: production
          MICROSERVICE_NAME: blacklist
          CLUSTER_NAME: blacklist-cluster
          NAMESPACE: blacklist
        
        probes:
          liveness:
            path: /health
            port: 8541
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readiness:
            path: /health
            port: 8541
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
        
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
        
        monitoring:
          enabled: true
          serviceMonitor:
            enabled: true
            path: /metrics
            port: metrics
        
        serviceAccount:
          create: true
          automount: true
          name: blacklist
        
        global:
          namespace: blacklist
          
  destination:
    server: https://kubernetes.default.svc
    namespace: blacklist
  
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    retry:
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
      limit: 5
    syncOptions:
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
    - RespectIgnoreDifferences=true
  
  revisionHistoryLimit: 10
  
  ignoreDifferences:
  - group: apps
    kind: Deployment
    jsonPointers:
    - /spec/replicas
    - /spec/template/spec/containers/0/image