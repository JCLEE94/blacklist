apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: blacklist
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://github.com/jclee/charts.git
    targetRevision: HEAD
    path: charts/blacklist
    helm:
      valueFiles:
        - values.yaml
      parameters:
        - name: image.tag
          value: "latest"
        - name: replicaCount
          value: "3"
        - name: environment
          value: "production"
  destination:
    server: https://kubernetes.default.svc
    namespace: blacklist
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
      - RespectIgnoreDifferences=true
      - ApplyOutOfSyncOnly=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  revisionHistoryLimit: 10
  ignoreDifferences:
    - group: apps
      kind: Deployment
      jsonPointers:
        - /spec/replicas
    - group: ""
      kind: Secret
      jsonPointers:
        - /data
---
apiVersion: v1
kind: Secret
metadata:
  name: blacklist-argocd-repo
  namespace: argocd
  labels:
    argocd.argoproj.io/secret-type: repository
type: Opaque
stringData:
  type: git
  url: https://github.com/jclee/charts.git
  # GitHub Personal Access Token이 필요한 경우 아래 주석 해제
  # password: <GITHUB_TOKEN>
  # username: <GITHUB_USERNAME>
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: blacklist-project
  namespace: argocd
spec:
  description: Blacklist Management System Project
  sourceRepos:
    - https://github.com/jclee/charts.git
    - https://github.com/jclee/blacklist.git
  destinations:
    - namespace: blacklist
      server: https://kubernetes.default.svc
    - namespace: argocd
      server: https://kubernetes.default.svc
  clusterResourceWhitelist:
    - group: ''
      kind: Namespace
    - group: ''
      kind: PersistentVolume
    - group: 'rbac.authorization.k8s.io'
      kind: ClusterRole
    - group: 'rbac.authorization.k8s.io'
      kind: ClusterRoleBinding
  namespaceResourceWhitelist:
    - group: ''
      kind: '*'
    - group: 'apps'
      kind: '*'
    - group: 'extensions'
      kind: '*'
    - group: 'networking.k8s.io'
      kind: '*'
    - group: 'autoscaling'
      kind: '*'
    - group: 'policy'
      kind: '*'
    - group: 'metrics.k8s.io'
      kind: '*'
  roles:
    - name: admin
      description: Admin role for blacklist project
      policies:
        - p, proj:blacklist-project:admin, applications, *, blacklist-project/*, allow
        - p, proj:blacklist-project:admin, repositories, *, *, allow
      groups:
        - blacklist-admins