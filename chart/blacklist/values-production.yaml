# Production values for blacklist chart
replicaCount: 3

image:
  repository: registry.jclee.me/jclee94/blacklist
  pullPolicy: Always
  tag: "latest"

imagePullSecrets:
  - name: registry-secret

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80
  targetPort: 2541

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
  hosts:
    - host: blacklist.jclee.me
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: blacklist-tls
      hosts:
        - blacklist.jclee.me

resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 15
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

persistence:
  data:
    enabled: true
    storageClass: "fast-ssd"
    size: 5Gi
    accessModes:
      - ReadWriteOnce
  logs:
    enabled: true
    storageClass: "fast-ssd"
    size: 2Gi
    accessModes:
      - ReadWriteOnce

# Application configuration
app:
  environment: production
  logLevel: INFO
  
security:
  forceDisableCollection: "false"
  maxAuthAttempts: 5
  blockDurationHours: 1
  restartProtection: "false"
  
collection:
  enabled: "true"
  
# Redis configuration
redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: false
  master:
    persistence:
      enabled: true
      size: 1Gi
      storageClass: "fast-ssd"
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
  metrics:
    enabled: true

# Monitoring
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s
    path: /metrics
  
podMonitor:
  enabled: true

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 2

# Network Policy
networkPolicy:
  enabled: true
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
        - namespaceSelector:
            matchLabels:
              name: monitoring
  egress:
    - to: []
      ports:
        - protocol: TCP
          port: 53
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 80

# Security Context
securityContext:
  runAsNonRoot: true
  runAsUser: 1001
  runAsGroup: 1001
  fsGroup: 1001
  seccompProfile:
    type: RuntimeDefault

containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1001

# Probes configuration
livenessProbe:
  enabled: true
  path: /health
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 3
  successThreshold: 1

readinessProbe:
  enabled: true
  path: /ready
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

startupProbe:
  enabled: true
  path: /health
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 30
  successThreshold: 1

# Environment variables
env:
  - name: FLASK_ENV
    value: "production"
  - name: PORT
    value: "2541"
  - name: DATABASE_URL
    value: "sqlite:////app/instance/blacklist.db"
  - name: REDIS_URL
    value: "redis://blacklist-redis:6379/0"
  - name: FORCE_DISABLE_COLLECTION
    value: "false"
  - name: COLLECTION_ENABLED
    value: "true"
  - name: RESTART_PROTECTION
    value: "false"
  - name: MAX_AUTH_ATTEMPTS
    value: "5"
  - name: BLOCK_DURATION_HOURS
    value: "1"

# Secret management
secrets:
  create: true
  annotations: {}
  data:
    # These should be provided via external secret management
    # regtech-username: ""
    # regtech-password: ""
    # secudium-username: ""
    # secudium-password: ""

# Node selection and tolerations
nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - blacklist
          topologyKey: kubernetes.io/hostname

# Pod annotations
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "2541"
  prometheus.io/path: "/metrics"

# Service annotations
serviceAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "80"