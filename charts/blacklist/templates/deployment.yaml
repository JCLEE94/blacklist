apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "blacklist.fullname" . }}
  namespace: {{ .Values.global.namespace | default "microservices" }}
  labels:
    {{- include "blacklist.labels" . | nindent 4 }}
    app.kubernetes.io/component: microservice
    infrastructure: jclee.me
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    {{- toYaml .Values.strategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "blacklist.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "blacklist.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: microservice
        infrastructure: jclee.me
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8541"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: {{ include "blacklist.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8541
              protocol: TCP
            - name: metrics
              containerPort: 8541
              protocol: TCP
          # MSA 표준 Health Check
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.liveness.path }}
              port: {{ .Values.probes.liveness.port }}
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readiness.path }}
              port: {{ .Values.probes.readiness.port }}
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
          # 리소스 제한 및 요청
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          # MSA 환경 변수
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            # jclee.me 인프라 특화 환경변수
            - name: REGISTRY_URL
              value: "https://registry.jclee.me"
            - name: CHARTS_URL
              value: "https://charts.jclee.me"
            - name: ARGOCD_URL
              value: "https://argo.jclee.me"
            - name: K8S_CLUSTER
              value: "https://k8s.jclee.me"
            # 인증 정보 (Secret에서 가져오기)
            - name: REGTECH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: blacklist-secrets
                  key: regtech-username
                  optional: true
            - name: REGTECH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: blacklist-secrets
                  key: regtech-password
                  optional: true
            - name: SECUDIUM_USERNAME
              valueFrom:
                secretKeyRef:
                  name: blacklist-secrets
                  key: secudium-username
                  optional: true
            - name: SECUDIUM_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: blacklist-secrets
                  key: secudium-password
                  optional: true
          # 볼륨 마운트 (로그, 데이터 등)
          volumeMounts:
            - name: data-volume
              mountPath: /app/data
            - name: logs-volume
              mountPath: /app/logs
      # 볼륨 정의
      volumes:
        - name: data-volume
          emptyDir: {}
        - name: logs-volume
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}