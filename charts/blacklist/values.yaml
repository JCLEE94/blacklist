# MSA 기본 설정 (jclee.me 인프라 최적화)
replicaCount: 3
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 1

image:
  repository: https://registry.jclee.me/jclee/blacklist
  pullPolicy: Always
  tag: "latest"

imagePullSecrets:
  - name: jclee-registry-secret

service:
  type: NodePort
  port: 80
  targetPort: 8080
  nodePort: 30080

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
    - host: blacklist.jclee.me
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: blacklist-tls
      hosts:
        - blacklist.jclee.me

# MSA 리소스 최적화
resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 200m
    memory: 256Mi

# HPA (Horizontal Pod Autoscaler)
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# 환경 변수
env:
  NODE_ENV: production
  PORT: "8080"
  MICROSERVICE_NAME: blacklist
  CLUSTER_NAME: microservices-cluster
  NAMESPACE: microservices

# Health Check 설정 (MSA 표준)
probes:
  liveness:
    path: /health
    port: 8080
    initialDelaySeconds: 60
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3
  readiness:
    path: /ready
    port: 8080
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

# MSA 보안 설정
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false

# Service Mesh 준비 (Istio)
istio:
  enabled: false
  virtualService:
    enabled: false
  destinationRule:
    enabled: false

# MSA 모니터링 (Prometheus/Grafana)
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    path: /metrics
    port: metrics

# MSA 로깅 (ELK Stack)  
logging:
  enabled: true
  level: info
  format: json

# 서비스 계정 설정
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

# Registry 인증 설정 (jclee.me 인프라)
registryAuth:
  username: admin
  password: bingogo1

# 인증 정보 (Secret으로 관리)
auth:
  regtech:
    username: admin
    password: bingogo1
  secudium:
    username: admin
    password: bingogo1

# 전역 설정
global:
  namespace: microservices

# Node Selector, Affinity, Tolerations
nodeSelector: {}
affinity: {}
tolerations: []
