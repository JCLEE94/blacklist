# Default values for blacklist.
replicaCount: 3

image:
  repository: registry.jclee.me/blacklist
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets:
  - name: regcred

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8541"
  prometheus.io/path: "/metrics"

podSecurityContext:
  fsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 8541
  targetPort: 8541
  annotations: {}

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
    - host: blacklist.jclee.me
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: blacklist-tls
      hosts:
        - blacklist.jclee.me

resources:
  limits:
    cpu: 2000m
    memory: 2Gi
  requests:
    cpu: 500m
    memory: 512Mi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 20
  targetCPUUtilizationPercentage: 60
  targetMemoryUtilizationPercentage: 70

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - blacklist
        topologyKey: kubernetes.io/hostname

environment: production

config:
  logLevel: info
  flaskEnv: production
  port: 8541
  enableMetrics: true
  enableTracing: true
  collectionEnabled: false
  secudiumEnabled: false
  cacheTTL: 3600
  secureCookies: true
  sessionTimeout: 3600

secrets:
  secretKey: ""
  jwtSecretKey: ""
  regtechUsername: ""
  regtechPassword: ""
  secudiumUsername: ""
  secudiumPassword: ""

redis:
  enabled: true
  auth:
    enabled: false
  master:
    persistence:
      enabled: true
      size: 8Gi
  replica:
    replicaCount: 0

prometheus:
  enabled: false
  serverFiles:
    prometheus.yml:
      scrape_configs:
        - job_name: blacklist
          kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_label_app]
              action: keep
              regex: blacklist

grafana:
  enabled: false
  adminPassword: admin
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://prometheus-server
          access: proxy
          isDefault: true

# VPA configuration
vpa:
  enabled: true
  updateMode: "Auto"

# PodDisruptionBudget
pdb:
  enabled: true
  minAvailable: 2

# NetworkPolicy
networkPolicy:
  enabled: true
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
        - podSelector: {}
      ports:
        - protocol: TCP
          port: 8541

# ServiceMonitor for Prometheus Operator
serviceMonitor:
  enabled: true
  interval: 30s
  path: /metrics