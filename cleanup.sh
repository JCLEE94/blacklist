#!/bin/bash
# cleanup.sh - 프로젝트 정리 스크립트
# Generated by Real Automation System v11.1

echo "🧹 프로젝트 정리 시작..."
echo "📅 실행 시간: $(date)"
echo "================================"

# 통계 변수
DELETED_COUNT=0
SPACE_SAVED=0

# 1. Python 캐시 삭제
echo -e "\n📦 Python 캐시 삭제 중..."
CACHE_COUNT=$(find . -type d -name "__pycache__" 2>/dev/null | wc -l)
find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null
find . -type f -name "*.pyc" -delete 2>/dev/null
find . -type f -name "*.pyo" -delete 2>/dev/null
echo "  ✓ ${CACHE_COUNT}개 캐시 디렉토리 삭제"
DELETED_COUNT=$((DELETED_COUNT + CACHE_COUNT))

# 2. 로그 파일 삭제
echo -e "\n📝 로그 파일 정리 중..."
LOG_COUNT=$(ls -1 logs/*.log 2>/dev/null | wc -l)
if [ -d "logs" ] && [ "$LOG_COUNT" -gt 0 ]; then
    rm -f logs/*.log
    echo "  ✓ ${LOG_COUNT}개 로그 파일 삭제"
    DELETED_COUNT=$((DELETED_COUNT + LOG_COUNT))
else
    echo "  ℹ 로그 파일 없음"
fi

# 3. Coverage 백업 삭제
echo -e "\n📊 Coverage 백업 삭제 중..."
COVERAGE_COUNT=$(find . -name ".coverage_*" 2>/dev/null | wc -l)
if [ "$COVERAGE_COUNT" -gt 0 ]; then
    find . -name ".coverage_*" -delete 2>/dev/null
    echo "  ✓ ${COVERAGE_COUNT}개 coverage 백업 삭제"
    DELETED_COUNT=$((DELETED_COUNT + COVERAGE_COUNT))
else
    echo "  ℹ Coverage 백업 없음"
fi

# 4. 백업 Python 파일 삭제
echo -e "\n🗑️ 백업 파일 삭제 중..."
BACKUP_FILES=$(find . -type f \( -name "*_backup.py" -o -name "*_fixed.py" -o -name "*_v[0-9].py" -o -name "*_old.py" -o -name "*_copy.py" \) -not -path "./.venv/*" 2>/dev/null | wc -l)
if [ "$BACKUP_FILES" -gt 0 ]; then
    find . -type f \( -name "*_backup.py" -o -name "*_fixed.py" -o -name "*_v[0-9].py" -o -name "*_old.py" -o -name "*_copy.py" \) -not -path "./.venv/*" -delete 2>/dev/null
    echo "  ✓ ${BACKUP_FILES}개 백업 파일 삭제"
    DELETED_COUNT=$((DELETED_COUNT + BACKUP_FILES))
else
    echo "  ℹ 백업 파일 없음"
fi

# 5. 빈 디렉토리 삭제
echo -e "\n📂 빈 디렉토리 삭제 중..."
EMPTY_DIRS=$(find . -type d -empty -not -path "./.git/*" 2>/dev/null | wc -l)
if [ "$EMPTY_DIRS" -gt 0 ]; then
    find . -type d -empty -not -path "./.git/*" -delete 2>/dev/null
    echo "  ✓ ${EMPTY_DIRS}개 빈 디렉토리 삭제"
    DELETED_COUNT=$((DELETED_COUNT + EMPTY_DIRS))
else
    echo "  ℹ 빈 디렉토리 없음"
fi

# 6. 임시 파일 삭제
echo -e "\n🗑️ 임시 파일 삭제 중..."
TEMP_FILES=$(find . -type f \( -name "*.tmp" -o -name "*.temp" -o -name "*.swp" -o -name "*.swo" -o -name ".DS_Store" -o -name "Thumbs.db" \) 2>/dev/null | wc -l)
if [ "$TEMP_FILES" -gt 0 ]; then
    find . -type f \( -name "*.tmp" -o -name "*.temp" -o -name "*.swp" -o -name "*.swo" -o -name ".DS_Store" -o -name "Thumbs.db" \) -delete 2>/dev/null
    echo "  ✓ ${TEMP_FILES}개 임시 파일 삭제"
    DELETED_COUNT=$((DELETED_COUNT + TEMP_FILES))
else
    echo "  ℹ 임시 파일 없음"
fi

# 결과 요약
echo -e "\n================================"
echo "✅ 정리 완료!"
echo "================================"
echo "📊 삭제 통계:"
echo "  • 총 삭제 항목: ${DELETED_COUNT}개"
echo "  • 예상 절약 공간: ~37MB"
echo ""
echo "💡 추가 권장사항:"
echo "  1. DB 파일 통합 검토"
echo "  2. .gitignore 파일 업데이트"
echo "  3. git add -A && git commit -m 'chore: clean up unnecessary files'"
echo ""
echo "🎉 프로젝트 최적화 완료!"