# ~/.bashrc: executed by bash(1) for non-login shells.

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# ========== History Settings ==========
HISTCONTROL=ignoreboth
shopt -s histappend
HISTSIZE=1000
HISTFILESIZE=2000

# ========== Shell Options ==========
shopt -s checkwinsize

# ========== Korean Locale Settings (ÌÜµÌï©) ==========
export LANG=ko_KR.UTF-8
export LC_ALL=ko_KR.UTF-8
export LC_CTYPE=ko_KR.UTF-8

# Input method settings (ÌïúÍ∏Ä ÏûÖÎ†•)
export XMODIFIERS=@im=fcitx
export GTK_IM_MODULE=fcitx
export QT_IM_MODULE=fcitx
export DefaultIMModule=fcitx

# Fix for terminal Korean input
stty -ixon  # Disable XON/XOFF flow control

# ========== Environment Variables ==========
export NVM_DIR="$HOME/.nvm"
export NODE_OPTIONS="--max-old-space-size=8192"  # Claude Code Î©îÎ™®Î¶¨ ÏµúÏ†ÅÌôî

# PATH ÏÑ§Ï†ï (Ï§ëÎ≥µ Ï†úÍ±∞)
export PATH="$HOME/.local/bin:$HOME/bin:$PATH"

# Production URLs
export PRODUCTION_URL=https://safework.jclee.me
export PRODUCTION_NODEPORT_URL='http://192.168.49.2:32301'

# ArgoCD Token (ÌÜµÌï© - Ï§ëÎ≥µ Ï†úÍ±∞Îê®)
export ARGOCD_AUTH_TOKEN=eyJhbGciOiJSUzI1NiIsImtpZCI6Ikxobzd5NUhuUmV0S0pJQTkwN1F5dUZtcDdUeXlKRTdSX2t6NGo0ZWlmUUUifQ.eyJhdWQiOlsiaHR0cHM6Ly9rdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWwiLCJrM3MiXSwiZXhwIjoxNzU3NDY0NzIzLCJpYXQiOjE3NTQ4NzI3MjMsImlzcyI6Imh0dHBzOi8va3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsIiwianRpIjoiNzY1NzY4ODAtOWExZC00MDBkLThhMTEtMzUzYjA2MTQ2MTRmIiwia3ViZXJuZXRlcy5pbyI6eyJuYW1lc3BhY2UiOiJhcmdvY2QiLCJzZXJ2aWNlYWNjb3VudCI6eyJuYW1lIjoiYXJnb2NkLXNlcnZlciIsInVpZCI6IjNlYTBmZThmLTRkZDgtNGFjZS1hN2U0LTdhZDY3Mzg4NjVjZSJ9fSwibmJmIjoxNzU0ODcyNzIzLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6YXJnb2NkOmFyZ29jZC1zZXJ2ZXIifQ.YsMuZY-U8-1TS9OQcdozBT7smHcTZ1VYmYSsIr0x6v12ra0-ug-m_ya2u8ObXGWsfC3Xut0aMwqoXkfQAd3fvi6SytIaIhYfwmL49DVWb-J7X6dUDSK5dTDAUrW8RKswCHdCscwlubO7VmfSXazixkzy_WzqnAX3Bmv70qbMsi_1zRdu8odlQX32FPgODGC3WG4lCFQxAnXm8yKxKFVkHgOA7i_a37yhzms41Yh2d5x1gjSCWcIw6fWNGxmXRhIkxqkGer0lxN_IVsVAZOxVi1zI40wA55c9U45PK_lhTjQtVvLToexlg_DuAOJSJOemh1QkLhEux-fnwo_LdoGirg

# ========== Prompt Settings ==========
# Debian chroot
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# Color prompt
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# Set terminal title
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
esac

# ========== Aliases ==========
# Color support
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Custom aliases
alias claude="/home/jclee/.claude/local/claude"
alias mosh='~/bin/mosh-wrapper'
alias load-claude="source /home/jclee/app/tmux/load-claude-aliases.sh"
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# tmux wrapper - ts ÏÇ¨Ïö© Í∞ïÏ†ú (ÎπÑÌôúÏÑ±Ìôî - ÎèÖÎ¶Ω ÏÜåÏºì ÏßÄÏõêÏùÑ ÏúÑÌï¥)
# alias tmux='/home/jclee/app/tmux/tmux-wrapper.sh'

# ========== tmux Integration (ÎπÑÌôúÏÑ±Ìôî - ÎèÖÎ¶Ω ÏÜåÏºì ÏßÄÏõêÏùÑ ÏúÑÌï¥) ==========
# Í∏∞Î≥∏ tmux ÌÜµÌï© Í∏∞Îä•ÏùÑ ÎπÑÌôúÏÑ±ÌôîÌïòÏó¨ ts Ïä§ÌÅ¨Î¶ΩÌä∏Ïùò ÎèÖÎ¶Ω ÏÜåÏºìÏù¥ Ï†úÎåÄÎ°ú ÏûëÎèôÌïòÎèÑÎ°ù Ìï®
# if [ -n "$TMUX" ]; then
#     # ÌôòÍ≤ΩÎ≥ÄÏàò ÎèôÍ∏∞Ìôî Î∞è ÎîîÎ†âÌÜ†Î¶¨ Ï∂îÏ†Å Ìï®Ïàò
#     function tmux_update_env() {
#         eval $(tmux show-environment -s 2>/dev/null)
#         # ÎîîÎ†âÌÜ†Î¶¨ Î≥ÄÍ≤Ω Ï∂îÏ†Å
#         if [ -x /home/jclee/app/tmux/scripts/monitor/update-last-dir.sh ]; then
#             /home/jclee/app/tmux/scripts/monitor/update-last-dir.sh
#         fi
#     }
#     
#     # ÌîÑÎ°¨ÌîÑÌä∏ ÌëúÏãú Ï†ÑÏóê ÌôòÍ≤ΩÎ≥ÄÏàò ÏóÖÎç∞Ïù¥Ìä∏ Î∞è ÎîîÎ†âÌÜ†Î¶¨ Ï∂îÏ†Å
#     PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND; }tmux_update_env"
#     
#     # ÎîîÎ†âÌÜ†Î¶¨ Î≥ÄÍ≤Ω Ïãú ÏûêÎèôÏúºÎ°ú ÎßàÏßÄÎßâ ÎîîÎ†âÌÜ†Î¶¨ ÏóÖÎç∞Ïù¥Ìä∏
#     function cd() {
#         builtin cd "$@"
#         local result=$?
#         if [ $result -eq 0 ] && [ -x /home/jclee/app/tmux/update-last-dir.sh ]; then
#             /home/jclee/app/tmux/update-last-dir.sh
#         fi
#         return $result
#     }
# fi

# ========== Source External Files ==========
# Load claude_aliases
if [ -f ~/app/tmux/config/claude_aliases ]; then
    source ~/app/tmux/config/claude_aliases
    # tmux ÏÑ∏ÏÖòÏóêÏÑú ÌôïÏù∏Î©îÏãúÏßÄ (Ï≤´ Î°úÎìúÏãúÏóêÎßå)
    if [ -n "$TMUX" ] && [ -z "$CLAUDE_ALIASES_LOADED" ]; then
        echo "Claude aliases loaded ‚úÖ"
        export CLAUDE_ALIASES_LOADED=1
    fi
fi

# Load ts ÏûêÎèôÏôÑÏÑ±
[ -f ~/app/tmux/ts-completion.bash ] && source ~/app/tmux/ts-completion.bash

# Load bash_aliases
[ -f ~/.bash_aliases ] && . ~/.bash_aliases

# Load NVM
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

# Load local env
[ -f "$HOME/.local/bin/env" ] && . "$HOME/.local/bin/env"

# Load .env file (ÌîÑÎ°úÏ†ùÌä∏Î≥Ñ)
if [ -f .env ]; then
    export $(grep -v '^#' .env 2>/dev/null | xargs)
    echo "‚úÖ Environment variables loaded from .env"
fi

# Bash completion
if ! shopt -oq posix; then
    if [ -f /usr/share/bash-completion/bash_completion ]; then
        . /usr/share/bash-completion/bash_completion
    elif [ -f /etc/bash_completion ]; then
        . /etc/bash_completion
    fi
fi

# Less pipe
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Claude debug settings
export CLAUDE_LOG_LEVEL=debug
export CLAUDE_DEBUG=1

# Ï§ëÎ≥µÎêú ArgoCD ÌÜ†ÌÅ∞Îì§ Ï†úÍ±∞Îê® - ÏÉÅÎã®Ïóê ÌÜµÌï©Îê®
export ARGOCD_SERVER='argo.jclee.me'
export ARGOCD_AUTH_TOKEN=""
alias argocd-login="argocd login argo.jclee.me --username admin --password bingogo1 --insecure --grpc-web"
source ~/.argocd-token

# ArgoCD ÏûêÎèô Ïù∏Ï¶ù
[ -f ~/.argocd-env ] && source ~/.argocd-env
alias argocd="/home/jclee/.claude/commands/argocd-wrapper.sh"

# ArgoCD Ïù∏Ï¶ù ÏÑ§Ï†ï
export ARGOCD_SERVER="argo.jclee.me"
export ARGOCD_OPTS="--insecure --grpc-web"

# ArgoCD ÌÜ†ÌÅ∞ ÏûêÎèô Í∞±Ïã† Ìï®Ïàò
argocd_login() {
    echo "üîê ArgoCD Î°úÍ∑∏Ïù∏ Ï§ë..."
    argocd login $ARGOCD_SERVER \
        --username admin \
        --password bingogo1 \
        --insecure \
        --grpc-web
    
    # ÌÜ†ÌÅ∞ÏùÑ ÌôòÍ≤Ω Î≥ÄÏàòÎ°ú Ï†ÄÏû•
    export ARGOCD_AUTH_TOKEN=$(cat ~/.argocd/config | grep -A1 "argo.jclee.me$" | grep auth-token | awk '{print $2}')
    echo "‚úÖ Î°úÍ∑∏Ïù∏ ÏôÑÎ£å. ÌÜ†ÌÅ∞Ïù¥ ÌôòÍ≤ΩÎ≥ÄÏàòÏóê Ï†ÄÏû•ÎêòÏóàÏäµÎãàÎã§."
}

# ArgoCD Î™ÖÎ†πÏñ¥ ÎûòÌçº (ÏûêÎèô Ïû¨Î°úÍ∑∏Ïù∏)
argo() {
    argocd "$@" 2>&1 | tee /tmp/argo_output.txt
    if grep -q "token is expired\|Unauthenticated" /tmp/argo_output.txt; then
        echo "‚ö†Ô∏è ÌÜ†ÌÅ∞ ÎßåÎ£å Í∞êÏßÄ. ÏûêÎèô Ïû¨Î°úÍ∑∏Ïù∏..."
        argocd_login
        argocd "$@"
    fi
}

# Î≥ÑÏπ≠ ÏÑ§Ï†ï
alias argocd-refresh='argocd_login'
alias argoapp='argo app'
alias argolist='argo app list'
alias argosync='argo app sync'

export ARGOCD_AUTH_TOKEN="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhcmdvY2QiLCJzdWIiOiJhZG1pbjphcGlLZXkiLCJuYmYiOjE3NTU0MTE1MzIsImlhdCI6MTc1NTQxMTUzMiwianRpIjoiMzM2YjlmOGEtZjRlNS00NWNmLWJmMDEtYzlhOTBkNjAwNzcwIn0.TzKnILq_1evliaHVF4BvtoqVAJOBTLlWF-Gjm5U0_Gk"
export ARGOCD_SERVER="argo.jclee.me"
# ArgoCD CLI Alias (ÏòÅÍµ¨ API Key ÏÇ¨Ïö©)
alias argocd-cli='/home/jclee/.claude/commands/scripts/argocd-cli-wrapper.sh'
alias argo='/home/jclee/.claude/commands/scripts/argocd-cli-wrapper.sh'
