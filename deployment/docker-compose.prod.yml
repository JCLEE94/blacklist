version: '3.8'

services:
  blacklist-app:
    image: ${REGISTRY:-registry.jclee.me}:${REGISTRY_PORT:-1234}/${IMAGE_NAME:-blacklist-management}:${IMAGE_TAG:-latest}
    container_name: blacklist-app-1
    restart: unless-stopped
    ports:
      - "${PORT:-2541}:2541"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=sqlite:////app/data/blacklist.db
      - REDIS_URL=redis://blacklist-redis:6379/0
      - LOG_LEVEL=INFO
      - TZ=Asia/Seoul
      # 수집기 설정
      - REGTECH_USERNAME=${REGTECH_USERNAME}
      - REGTECH_PASSWORD=${REGTECH_PASSWORD}
      - SECUDIUM_USERNAME=${SECUDIUM_USERNAME}
      - SECUDIUM_PASSWORD=${SECUDIUM_PASSWORD}
      # 모니터링
      - ENABLE_METRICS=true
      - METRICS_PORT=9090
    volumes:
      - blacklist-data:/app/data
      - blacklist-logs:/app/logs
      - ./instance:/app/instance
    depends_on:
      - blacklist-redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2541/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - blacklist-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  blacklist-redis:
    image: redis:7-alpine
    container_name: blacklist-redis
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis-data:/data
    networks:
      - blacklist-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  blacklist-prometheus:
    image: prom/prometheus:latest
    container_name: blacklist-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9091:9090"
    networks:
      - blacklist-network

  blacklist-grafana:
    image: grafana/grafana:latest
    container_name: blacklist-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    ports:
      - "3000:3000"
    depends_on:
      - blacklist-prometheus
    networks:
      - blacklist-network

volumes:
  blacklist-data:
    driver: local
  blacklist-logs:
    driver: local
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  blacklist-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16