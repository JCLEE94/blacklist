# Docker Compose 프로덕션 배포 설정
# K8s 대신 Compose 기반 완전 전환
version: '3.9'

services:
  blacklist:
    image: ${REGISTRY:-registry.jclee.me}/blacklist:${VERSION:-latest}
    container_name: blacklist-prod
    restart: unless-stopped
    ports:
      - "32542:2542"
    volumes:
      - ../data:/app/instance
      - ../logs:/app/logs
      - /etc/localtime:/etc/localtime:ro
    environment:
      FLASK_ENV: production
      PORT: 2542
      DATABASE_URL: sqlite:////app/instance/blacklist.db
      REDIS_URL: redis://redis:6379/0
      COLLECTION_ENABLED: "true"
      FORCE_DISABLE_COLLECTION: "false"
      # 프로덕션 보안 설정
      MAX_AUTH_ATTEMPTS: 3
      BLOCK_DURATION_HOURS: 24
      SESSION_TIMEOUT: 1800
      # 성능 최적화
      GUNICORN_WORKERS: 4
      GUNICORN_THREADS: 2
      CACHE_DEFAULT_TTL: 300
    env_file:
      - ../.env
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2542/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - blacklist-prod
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "5"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.1'
          memory: 256M

  redis:
    image: redis:7-alpine
    container_name: blacklist-redis-prod
    restart: unless-stopped
    volumes:
      - redis_prod_data:/data
      - /etc/localtime:/etc/localtime:ro
    command: >
      redis-server
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --appendonly yes
      --appendfsync everysec
      --save 900 1
      --save 300 10
      --save 60 10000
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - blacklist-prod
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower-prod
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
    environment:
      # 프로덕션: 2시간마다 체크
      WATCHTOWER_POLL_INTERVAL: 7200
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_SCOPE: blacklist-prod
      WATCHTOWER_INCLUDE_RESTARTING: "true"
      WATCHTOWER_DEBUG: "false"
      TZ: Asia/Seoul
      # 업데이트 알림
      WATCHTOWER_NOTIFICATIONS: shoutrrr
      WATCHTOWER_NOTIFICATION_URL: "generic+http://blacklist:2542/webhook/watchtower"
    command: blacklist-prod
    networks:
      - blacklist-prod
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  # 프로덕션 모니터링 (선택사항)
  prometheus:
    image: prom/prometheus:latest
    container_name: blacklist-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    networks:
      - blacklist-prod
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 256M
    profiles:
      - monitoring

volumes:
  redis_prod_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./redis-data-prod

  prometheus_data:
    driver: local

networks:
  blacklist-prod:
    driver: bridge
    name: blacklist-production
    ipam:
      driver: default
      config:
        - subnet: 172.25.0.0/16