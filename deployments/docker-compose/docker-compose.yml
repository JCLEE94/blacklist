# Docker Compose - No Bind Mounts, Only Volumes
# Private Registry: registry.jclee.me
version: '3.9'

services:
  blacklist:
    image: registry.jclee.me/blacklist:latest
    container_name: blacklist
    restart: unless-stopped
    ports:
      - "32542:2542"
    volumes:
      # Named volumes only - no bind mounts
      - blacklist-data:/app/instance
      - blacklist-logs:/app/logs
    environment:
      FLASK_ENV: production
      PORT: 2542
      DATABASE_URL: "postgresql://blacklist_user:blacklist_password_change_me@postgresql:5432/blacklist"
      REDIS_URL: redis://redis:6379/0
      COLLECTION_ENABLED: "true"
      FORCE_DISABLE_COLLECTION: "false"
      MAX_AUTH_ATTEMPTS: 5
      BLOCK_DURATION_HOURS: 1
      # Performance
      GUNICORN_WORKERS: 4
      GUNICORN_THREADS: 2
      GUNICORN_TIMEOUT: 60
      # Logging
      LOG_LEVEL: WARNING
    env_file:
      - ./.env
    depends_on:
      redis:
        condition: service_healthy
      postgresql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2542/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - blacklist-net
    labels:
      - "com.watchtower.enable=true"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: registry.jclee.me/blacklist-redis:latest
    container_name: blacklist-redis
    restart: unless-stopped
    volumes:
      # Named volume for Redis data
      - redis-data:/data
    environment:
      - REDIS_MAXMEMORY=1gb
      - REDIS_MAXMEMORY_POLICY=allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - blacklist-net
    labels:
      - "com.watchtower.enable=true"

  postgresql:
    image: registry.jclee.me/blacklist-postgresql:latest
    container_name: blacklist-postgresql
    restart: unless-stopped
    ports:
      - "32543:5432"
    volumes:
      # Named volume for PostgreSQL data
      - postgresql-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: blacklist
      POSTGRES_USER: blacklist_user
      POSTGRES_PASSWORD: blacklist_password_change_me
      PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "blacklist_user", "-d", "blacklist"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - blacklist-net
    labels:
      - "com.watchtower.enable=true"

# Named volumes (no bind mounts)
volumes:
  blacklist-data:
    driver: local
    name: blacklist-data
  blacklist-logs:
    driver: local
    name: blacklist-logs
  redis-data:
    driver: local
    name: blacklist-redis-data
  postgresql-data:
    driver: local
    name: blacklist-postgresql-data

networks:
  blacklist-net:
    driver: bridge
    name: blacklist-network