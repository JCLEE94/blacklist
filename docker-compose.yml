# Blacklist Management System - Optimized Docker Compose
# Version: v1.0.37
# Registry: registry.jclee.me
# Port Configuration: Docker(32542) | Local(2542)

version: '3.9'

services:
  blacklist:
    image: ${REGISTRY_URL:-registry.jclee.me}/blacklist:${IMAGE_TAG:-latest}
    container_name: blacklist
    restart: unless-stopped
    ports:
      - "${EXTERNAL_PORT:-32542}:${INTERNAL_PORT:-2542}"
    volumes:
      - blacklist-data:/app/instance
      - blacklist-logs:/app/logs
    environment:
      # Core Application
      FLASK_ENV: ${FLASK_ENV:-production}
      PORT: ${INTERNAL_PORT:-2542}
      DEBUG: ${DEBUG:-false}
      SECRET_KEY: ${SECRET_KEY}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      
      # Database (PostgreSQL) - Using container network name
      DATABASE_URL: "postgresql://${POSTGRES_USER:-blacklist_user}:${POSTGRES_PASSWORD:-blacklist_password_change_me}@blacklist-postgresql:5432/${POSTGRES_DB:-blacklist}"
      DATABASE_POOL_SIZE: ${DATABASE_POOL_SIZE:-20}
      DATABASE_MAX_OVERFLOW: ${DATABASE_MAX_OVERFLOW:-40}
      
      # Cache (Redis) - Using container network name
      REDIS_URL: redis://blacklist-redis:6379/0
      CACHE_TYPE: redis
      CACHE_DEFAULT_TTL: ${CACHE_DEFAULT_TTL:-300}
      
      # Collection Settings
      COLLECTION_ENABLED: ${COLLECTION_ENABLED:-true}
      FORCE_DISABLE_COLLECTION: ${FORCE_DISABLE_COLLECTION:-false}
      RESTART_PROTECTION: ${RESTART_PROTECTION:-false}
      AUTO_EXTRACT_COOKIES: ${AUTO_EXTRACT_COOKIES:-true}
      MAX_AUTH_ATTEMPTS: ${MAX_AUTH_ATTEMPTS:-5}
      BLOCK_DURATION_HOURS: ${BLOCK_DURATION_HOURS:-1}
      
      # Authentication
      JWT_ACCESS_TOKEN_EXPIRES: ${JWT_ACCESS_TOKEN_EXPIRES:-3600}
      JWT_REFRESH_TOKEN_EXPIRES: ${JWT_REFRESH_TOKEN_EXPIRES:-86400}
      JWT_ENABLED: ${JWT_ENABLED:-true}
      API_KEY_ENABLED: ${API_KEY_ENABLED:-true}
      DEFAULT_API_KEY: ${DEFAULT_API_KEY}
      ADMIN_USERNAME: ${ADMIN_USERNAME:-admin}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      
      # External Services
      REGTECH_USERNAME: ${REGTECH_USERNAME}
      REGTECH_PASSWORD: ${REGTECH_PASSWORD}
      REGTECH_BASE_URL: ${REGTECH_BASE_URL:-https://regtech.fsec.or.kr}
      SECUDIUM_USERNAME: ${SECUDIUM_USERNAME}
      SECUDIUM_PASSWORD: ${SECUDIUM_PASSWORD}
      SECUDIUM_BASE_URL: ${SECUDIUM_BASE_URL:-https://isap.secudium.co.kr}
      
      # Performance Optimization
      GUNICORN_WORKERS: ${GUNICORN_WORKERS:-4}
      GUNICORN_THREADS: ${GUNICORN_THREADS:-2}
      GUNICORN_TIMEOUT: ${GUNICORN_TIMEOUT:-60}
      GUNICORN_KEEPALIVE: ${GUNICORN_KEEPALIVE:-5}
      GUNICORN_MAX_REQUESTS: ${GUNICORN_MAX_REQUESTS:-1000}
      GUNICORN_MAX_REQUESTS_JITTER: ${GUNICORN_MAX_REQUESTS_JITTER:-50}
      
      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-WARNING}
      LOG_FORMAT: ${LOG_FORMAT:-json}
      LOG_FILE: /app/logs/blacklist.log
      
      # Monitoring
      PROMETHEUS_ENABLED: ${PROMETHEUS_ENABLED:-true}
      HEALTH_CHECK_TIMEOUT: ${HEALTH_CHECK_TIMEOUT:-30}
      HEALTH_CHECK_INTERVAL: ${HEALTH_CHECK_INTERVAL:-60}
      
      # Feature Flags
      ENABLE_V2_API: ${ENABLE_V2_API:-true}
      ENABLE_COOKIE_COLLECTION: ${ENABLE_COOKIE_COLLECTION:-true}
      ENABLE_METRICS: ${ENABLE_METRICS:-true}
      
      # Security Headers
      SECURITY_HEADERS_ENABLED: ${SECURITY_HEADERS_ENABLED:-true}
      RATE_LIMIT_ENABLED: ${RATE_LIMIT_ENABLED:-true}
      RATE_LIMIT_API: ${RATE_LIMIT_API:-1000/hour}
      
      # Python Configuration
      PYTHONPATH: /app
      PYTHONUNBUFFERED: 1
    command: ["python3", "-m", "src.core.main"]
    # depends_on removed - services run independently
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${INTERNAL_PORT:-2542}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - blacklist-net
    labels:
      - "com.watchtower.enable=true"
      - "com.watchtower.scope=blacklist"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: ${REGISTRY_URL:-registry.jclee.me}/blacklist-redis:${REDIS_TAG:-latest}
    container_name: blacklist-redis
    restart: unless-stopped
    ports:
      - "${REDIS_EXTERNAL_PORT:-32543}:6379"
    volumes:
      - redis-data:/data
    environment:
      REDIS_MAXMEMORY: ${REDIS_MAXMEMORY:-1gb}
      REDIS_MAXMEMORY_POLICY: ${REDIS_MAXMEMORY_POLICY:-allkeys-lru}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - blacklist-net
    labels:
      - "com.watchtower.enable=true"
      - "com.watchtower.scope=blacklist"

  postgresql:
    image: ${REGISTRY_URL:-registry.jclee.me}/blacklist-postgresql:${POSTGRES_TAG:-latest}
    container_name: blacklist-postgresql
    restart: unless-stopped
    ports:
      - "${POSTGRES_EXTERNAL_PORT:-32544}:5432"
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-blacklist}
      POSTGRES_USER: ${POSTGRES_USER:-blacklist_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-blacklist_user}", "-d", "${POSTGRES_DB:-blacklist}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - blacklist-net
    labels:
      - "com.watchtower.enable=true"
      - "com.watchtower.scope=blacklist"


# Optimized Named Volumes
volumes:
  blacklist-data:
    driver: local
    name: blacklist-data
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data/blacklist}
  
  blacklist-logs:
    driver: local
    name: blacklist-logs
    driver_opts:
      type: none
      o: bind
      device: ${LOGS_PATH:-./logs}
  
  redis-data:
    driver: local
    name: blacklist-redis-data
    driver_opts:
      type: none
      o: bind
      device: ${REDIS_DATA_PATH:-./data/redis}
  
  postgresql-data:
    driver: local
    name: blacklist-postgresql-data
    driver_opts:
      type: none
      o: bind
      device: ${POSTGRES_DATA_PATH:-./data/postgresql}

# Optimized Network
networks:
  blacklist-net:
    driver: bridge
    name: blacklist-network
    driver_opts:
      com.docker.network.bridge.name: bl-net
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1