apiVersion: apps/v1
kind: Deployment
metadata:
  name: blacklist
  labels:
    app: blacklist
    component: api-server
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: blacklist
  template:
    metadata:
      labels:
        app: blacklist
        component: api-server
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "2541"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: blacklist
        image: registry.jclee.me/jclee94/blacklist:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 2541
          protocol: TCP
        env:
        - name: PORT
          value: "2541"
        - name: HOST
          value: "0.0.0.0"
        - name: FLASK_ENV
          value: "production"
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: REDIS_URL
          value: "redis://blacklist-redis:6379/0"
        - name: DATABASE_URL
          value: "sqlite:////app/instance/blacklist.db"
        envFrom:
        - configMapRef:
            name: blacklist-config
        - secretRef:
            name: blacklist-secret
        volumeMounts:
        - name: data-storage
          mountPath: /app/instance
          subPath: instance
        - name: data-storage
          mountPath: /app/data
          subPath: data
        - name: data-storage
          mountPath: /app/logs
          subPath: logs
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 2
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 6
      volumes:
      - name: data-storage
        persistentVolumeClaim:
          claimName: blacklist-pvc
      restartPolicy: Always
      terminationGracePeriodSeconds: 60

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: blacklist-pvc
  labels:
    app: blacklist
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blacklist-redis
  labels:
    app: blacklist
    component: redis
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: blacklist
      component: redis
  template:
    metadata:
      labels:
        app: blacklist
        component: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        args:
        - redis-server
        - --appendonly
        - "yes"
        - --maxmemory
        - "256mb"
        - --maxmemory-policy
        - "allkeys-lru"
        - --save
        - "900"
        - "1"
        - --save
        - "300"
        - "10"
        - --save
        - "60"
        - "10000"
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        volumeMounts:
        - name: redis-data
          mountPath: /data
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: blacklist-redis-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: blacklist-redis-pvc
  labels:
    app: blacklist
    component: redis
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard