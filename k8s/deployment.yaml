apiVersion: apps/v1
kind: Deployment
metadata:
  name: blacklist
  namespace: blacklist
  labels:
    app: blacklist
spec:
  replicas: 4
  progressDeadlineSeconds: 1200  # 20분으로 연장 (기본값: 600초)
  selector:
    matchLabels:
      app: blacklist
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2           # 동시에 생성할 수 있는 추가 Pod 수
      maxUnavailable: 1     # 동시에 사용 불가능한 최대 Pod 수
  template:
    metadata:
      labels:
        app: blacklist
    spec:
      imagePullSecrets:
      - name: regcred
      initContainers:
      - name: init-permissions
        image: busybox
        command: ['sh', '-c', 'chmod -R 777 /app/data /app/logs /app/instance || true']
        volumeMounts:
        - name: data
          mountPath: /app/data
        - name: logs
          mountPath: /app/logs
        - name: instance
          mountPath: /app/instance
      containers:
      - name: blacklist
        image: registry.jclee.me/blacklist:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 2541
          name: http
        envFrom:
        - configMapRef:
            name: blacklist-config
        - secretRef:
            name: blacklist-secret
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 2541
          initialDelaySeconds: 30  # 빠른 시작을 위해 축소
          periodSeconds: 10        # 더 자주 체크
          timeoutSeconds: 5        # 빠른 응답
          failureThreshold: 3      # 빠른 재시작
        readinessProbe:
          httpGet:
            path: /health
            port: 2541
          initialDelaySeconds: 10  # 매우 빠른 준비 확인
          periodSeconds: 5         # 자주 체크
          timeoutSeconds: 3        # 빠른 응답
          successThreshold: 1      # 한 번만 성공하면 준비 완료
          failureThreshold: 3      # 3번 실패 시 준비 안됨
        volumeMounts:
        - name: data
          mountPath: /app/data
        - name: logs
          mountPath: /app/logs
        - name: instance
          mountPath: /app/instance
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: blacklist-data
      - name: logs
        persistentVolumeClaim:
          claimName: blacklist-logs
      - name: instance
        persistentVolumeClaim:
          claimName: blacklist-instance