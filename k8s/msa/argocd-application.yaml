apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: blacklist-msa
  namespace: argocd
  labels:
    app.kubernetes.io/name: blacklist
    infrastructure: jclee.me
    deployment-type: msa
  annotations:
    # ArgoCD Image Updater 설정
    argocd-image-updater.argoproj.io/image-list: blacklist=registry.jclee.me/jclee/blacklist
    argocd-image-updater.argoproj.io/write-back-method: git
    argocd-image-updater.argoproj.io/git-branch: main
    argocd-image-updater.argoproj.io/blacklist.update-strategy: latest
    argocd-image-updater.argoproj.io/blacklist.helm.image-name: image.repository
    argocd-image-updater.argoproj.io/blacklist.helm.image-tag: image.tag
    # 자동 동기화 주기 (2분마다 체크)
    argocd-image-updater.argoproj.io/blacklist.pull-secret: pullsecret:microservices/jclee-registry-secret
spec:
  # 프로젝트 설정
  project: default
  
  # Helm Chart 소스 설정
  source:
    repoURL: https://charts.jclee.me
    chart: blacklist
    targetRevision: "*"
    helm:
      valueFiles:
        - values.yaml
      parameters:
        # jclee.me 인프라 최적화 파라미터
        - name: global.namespace
          value: microservices
        - name: image.repository
          value: registry.jclee.me/jclee/blacklist
        - name: image.tag
          value: latest
        - name: service.nodePort
          value: "30080"
        - name: ingress.hosts[0].host
          value: blacklist.jclee.me
        # MSA 최적화 설정
        - name: replicaCount
          value: "3"
        - name: autoscaling.enabled
          value: "true"
        - name: autoscaling.minReplicas
          value: "2"
        - name: autoscaling.maxReplicas
          value: "10"
        - name: monitoring.enabled
          value: "true"
        - name: monitoring.serviceMonitor.enabled
          value: "true"
        # 리소스 최적화
        - name: resources.requests.cpu
          value: "200m"
        - name: resources.requests.memory
          value: "256Mi"
        - name: resources.limits.cpu
          value: "1000m"
        - name: resources.limits.memory
          value: "1Gi"

  # 배포 대상 클러스터
  destination:
    server: https://kubernetes.default.svc
    namespace: microservices

  # 동기화 정책
  syncPolicy:
    # 자동 동기화 활성화
    automated:
      prune: true          # 삭제된 리소스 자동 정리
      selfHeal: true       # 수동 변경사항 자동 복구
      allowEmpty: false    # 빈 매니페스트 허용 안함
    
    # 동기화 옵션
    syncOptions:
      - CreateNamespace=true     # 네임스페이스 자동 생성
      - PruneLast=true          # 마지막에 정리 작업 수행
      - ApplyOutOfSyncOnly=true # 변경된 리소스만 적용
      - RespectIgnoreDifferences=true
      - ServerSideApply=true    # 서버 사이드 적용 사용
    
    # 재시도 정책
    retry:
      limit: 5
      backoff:
        duration: 30s
        factor: 2
        maxDuration: 5m

  # 무시할 차이점 설정
  ignoreDifferences:
    - group: apps
      kind: Deployment
      jsonPointers:
        - /spec/replicas
    - group: ""
      kind: Service
      jsonPointers:
        - /spec/clusterIP
    - group: argoproj.io
      kind: Application
      jsonPointers:
        - /status

  # 헬스 체크 설정
  revisionHistoryLimit: 10

---
# ArgoCD AppProject (필요한 경우)
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: blacklist-project
  namespace: argocd
  labels:
    infrastructure: jclee.me
spec:
  description: "Blacklist MSA Project for jclee.me infrastructure"
  
  # 소스 리포지토리 허용
  sourceRepos:
    - 'https://github.com/JCLEE94/blacklist.git'
    - 'https://charts.jclee.me'
    - 'registry.jclee.me/*'
  
  # 배포 대상 허용
  destinations:
    - namespace: microservices
      server: https://kubernetes.default.svc
    - namespace: argocd
      server: https://kubernetes.default.svc
  
  # 클러스터 리소스 화이트리스트
  clusterResourceWhitelist:
    - group: ''
      kind: Namespace
    - group: 'rbac.authorization.k8s.io'
      kind: ClusterRole
    - group: 'rbac.authorization.k8s.io'
      kind: ClusterRoleBinding
  
  # 네임스페이스 리소스 화이트리스트
  namespaceResourceWhitelist:
    - group: ''
      kind: ConfigMap
    - group: ''
      kind: Secret
    - group: ''
      kind: Service
    - group: ''
      kind: ServiceAccount
    - group: 'apps'
      kind: Deployment
    - group: 'apps'
      kind: StatefulSet
    - group: 'networking.k8s.io'
      kind: Ingress
    - group: 'autoscaling'
      kind: HorizontalPodAutoscaler
    - group: 'monitoring.coreos.com'
      kind: ServiceMonitor
    - group: 'policy'
      kind: PodDisruptionBudget

  # RBAC 정책
  roles:
    - name: admin
      description: "관리자 권한"
      policies:
        - p, proj:blacklist-project:admin, applications, *, blacklist-project/*, allow
        - p, proj:blacklist-project:admin, repositories, *, *, allow
      groups:
        - admin
    
    - name: developer
      description: "개발자 권한"
      policies:
        - p, proj:blacklist-project:developer, applications, get, blacklist-project/*, allow
        - p, proj:blacklist-project:developer, applications, sync, blacklist-project/*, allow
      groups:
        - developer