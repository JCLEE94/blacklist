apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: blacklist-hpa-optimized
  namespace: blacklist
  labels:
    app: blacklist
    tier: performance
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: blacklist
  minReplicas: 2
  maxReplicas: 20
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300  # 5분 안정화
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 60   # 1분 안정화
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 4
        periodSeconds: 30
      selectPolicy: Max
  metrics:
  # CPU 기반 스케일링 (주요 메트릭)
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  # 메모리 기반 스케일링 (보조 메트릭)
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  # 사용자 정의 메트릭: API 응답시간
  - type: Object
    object:
      metric:
        name: blacklist_api_response_time_ms
      target:
        type: Value
        value: "500m"  # 500ms
      describedObject:
        apiVersion: v1
        kind: Service
        name: blacklist-service
  # 사용자 정의 메트릭: 큐 길이
  - type: Object
    object:
      metric:
        name: blacklist_queue_length
      target:
        type: Value
        value: "10"
      describedObject:
        apiVersion: v1
        kind: Service
        name: blacklist-service
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: autoscaling-config
  namespace: blacklist
data:
  scaling-rules.yaml: |
    # 성능 기반 자동 스케일링 규칙
    scaling_rules:
      # 트래픽 패턴 기반 예측 스케일링
      traffic_patterns:
        - name: "morning_peak"
          time_range: "08:00-10:00"
          timezone: "Asia/Seoul"
          min_replicas: 6
          max_replicas: 15
          target_cpu: 60
        - name: "lunch_peak"
          time_range: "12:00-14:00"
          timezone: "Asia/Seoul"
          min_replicas: 4
          max_replicas: 12
          target_cpu: 65
        - name: "evening_peak"
          time_range: "17:00-19:00"
          timezone: "Asia/Seoul"
          min_replicas: 8
          max_replicas: 20
          target_cpu: 55
        - name: "night_minimal"
          time_range: "22:00-06:00"
          timezone: "Asia/Seoul"
          min_replicas: 2
          max_replicas: 6
          target_cpu: 80
      
      # 성능 임계값 기반 즉시 스케일링
      performance_thresholds:
        # 긴급 스케일 업 조건
        emergency_scale_up:
          - condition: "avg_response_time > 2000ms"
            action: "scale_to_max_replicas"
            cooldown: 180
          - condition: "error_rate > 5%"
            action: "add_50_percent_replicas"
            cooldown: 120
          - condition: "cpu_usage > 90%"
            action: "add_4_replicas"
            cooldown: 60
        
        # 예방적 스케일 업 조건
        preventive_scale_up:
          - condition: "avg_response_time > 800ms"
            action: "add_2_replicas"
            cooldown: 180
          - condition: "memory_usage > 85%"
            action: "add_1_replica"
            cooldown: 240
          - condition: "cache_hit_rate < 70%"
            action: "add_1_replica"
            cooldown: 300
        
        # 스케일 다운 조건
        scale_down:
          - condition: "avg_response_time < 200ms AND cpu_usage < 30%"
            action: "remove_1_replica"
            cooldown: 600
          - condition: "memory_usage < 40% AND request_rate < 10_per_minute"
            action: "remove_2_replicas"
            cooldown: 900
      
      # 리소스 제약 조건
      resource_limits:
        max_memory_per_pod: "1Gi"
        max_cpu_per_pod: "1000m"
        max_total_memory: "20Gi"
        max_total_cpu: "20000m"
      
      # 비용 최적화 규칙
      cost_optimization:
        # 주말 최적화
        weekend_scaling:
          saturday:
            min_replicas: 1
            max_replicas: 8
            target_cpu: 75
          sunday:
            min_replicas: 1
            max_replicas: 6
            target_cpu: 80
        
        # 공휴일 최적화
        holiday_scaling:
          min_replicas: 1
          max_replicas: 4
          target_cpu: 85
---
apiVersion: v1
kind: ServiceMonitor
metadata:
  name: blacklist-performance-monitor
  namespace: blacklist
spec:
  selector:
    matchLabels:
      app: blacklist
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s
---
# PrometheusRule for custom scaling metrics
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: blacklist-scaling-rules
  namespace: blacklist
spec:
  groups:
  - name: blacklist.scaling
    rules:
    # API 응답시간 메트릭
    - record: blacklist:api_response_time_avg
      expr: avg(rate(flask_request_duration_seconds_sum[5m]) / rate(flask_request_duration_seconds_count[5m])) * 1000
    
    # 에러율 메트릭
    - record: blacklist:error_rate
      expr: rate(flask_request_exceptions_total[5m]) / rate(flask_requests_total[5m]) * 100
    
    # 큐 길이 메트릭 (추정)
    - record: blacklist:queue_length
      expr: sum(up{job="blacklist"}) * blacklist:api_response_time_avg / 100
    
    # 알림 규칙
    - alert: BlacklistHighResponseTime
      expr: blacklist:api_response_time_avg > 1000
      for: 2m
      labels:
        severity: warning
        action: scale_up
      annotations:
        summary: "Blacklist API response time is high"
        description: "API average response time is {{ $value }}ms"
    
    - alert: BlacklistHighErrorRate
      expr: blacklist:error_rate > 5
      for: 1m
      labels:
        severity: critical
        action: scale_up_emergency
      annotations:
        summary: "Blacklist API error rate is high"
        description: "API error rate is {{ $value }}%"
    
    - alert: BlacklistLowLoad
      expr: blacklist:api_response_time_avg < 100 and rate(flask_requests_total[10m]) < 0.1
      for: 10m
      labels:
        severity: info
        action: scale_down
      annotations:
        summary: "Blacklist API load is low"
        description: "Consider scaling down. Response time: {{ $value }}ms"